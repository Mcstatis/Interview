一、快速排序
def partition(alist, first, last):
  n = len(alist)
  pivot_value = alist[first]
  left = first + 1
  right = last
  while left <= right:
    if alist[left] > pivot_value and alist[right] < pivot_table:
      alist[left], alist[right] = alist[right], alist[left]
      left += 1
      right -= 1
    elif alist[left] < pivot_value:
      left += 1
    elif alist[right] > pivot_value:
      right -= 1
  alist[first], alist[right] = alist[right], alist[first]
  return right
  
def quick_sort_helper(alist, first, last):
  if first < last:
    split_point = partition(alist, first, last)
    quick_sort_heiper(alist, first, split_point-1)
    quick_sort_heiper(alist, split_point+1, right)

def quick_sort(alist):
  first = 0
  last = len(alist) - 1
  quick_sort_helper(alist, first, last)
  return alist

二、二分查找
def bisec_find(alist, item):
  if len(alist) == 0:
    return False
  else: 
    mid = len(alist) // 2
    if len(alist) > 1:
      if alist[mid] == item:
        return True
      elif alist[mid] > item:
        return bisec_find(alist[:mid], item)
      else:
        return bisec_find(alist[mid+1:], item)

三、简要介绍一下SVM

四、过拟合(overfitting)怎么解决？
1、增大样本量（如果可以）
2、正则化
3、交叉验证
